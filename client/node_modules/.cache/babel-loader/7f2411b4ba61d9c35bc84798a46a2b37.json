{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\nimport { setAlert } from './alert';\nimport setAuthToken from './../reducers/utils/setAuthToken'; // Load User \n\nexport var loadUser = function loadUser() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (localStorage.token) {\n                setAuthToken(localStorage.token);\n              }\n\n              _context.prev = 1;\n              _context.next = 4;\n              return axios.get('/api/auth');\n\n            case 4:\n              res = _context.sent;\n              dispatch({\n                type: USER_LOADED,\n                payload: res.data //this will be the user\n\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: AUTH_ERROR\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // Register User\n\nexport var register = function register(_ref2) {\n  var name = _ref2.name,\n      email = _ref2.email,\n      password = _ref2.password;\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, body, res, errors;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              body = JSON.stringify({\n                name: name,\n                email: email,\n                password: password\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post('/api/users', body, config);\n\n            case 5:\n              res = _context2.sent;\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data //this will be the token that we hit /api/users route\n\n              });\n              _context2.next = 14;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](2);\n              errors = _context2.t0.response.data.errors;\n\n              if (errors) {\n                errors.forEach(function (error) {\n                  return dispatch(setAlert(error.msg, 'danger'));\n                });\n              }\n\n              dispatch({\n                type: REGISTER_FAIL\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 9]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","get","res","type","payload","data","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,UAAvD,QAAyE,SAAzE;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB,C,CAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA,wEAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5B,kBAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,gBAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AAH2B;AAAA;AAAA,qBAKRV,KAAK,CAACW,GAAN,CAAU,WAAV,CALQ;;AAAA;AAKpBC,cAAAA,GALoB;AAM1BJ,cAAAA,QAAQ,CAAC;AACPK,gBAAAA,IAAI,EAAEV,WADC;AAEPW,gBAAAA,OAAO,EAAEF,GAAG,CAACG,IAFN,CAEa;;AAFb,eAAD,CAAR;AAN0B;AAAA;;AAAA;AAAA;AAAA;AAW1BP,cAAAA,QAAQ,CAAC;AACPK,gBAAAA,IAAI,EAAET;AADC,eAAD,CAAR;;AAX0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB,C,CAkBP;;AACA,OAAO,IAAMY,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAEC,IAAF,SAAEA,IAAF;AAAA,MAAQC,KAAR,SAAQA,KAAR;AAAA,MAAeC,QAAf,SAAeA,QAAf;AAAA;AAAA,yEAA6B,kBAAMX,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CY,cAAAA,MAD6C,GACpC;AACbC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AADI,eADoC;AAM7CC,cAAAA,IAN6C,GAMtCC,IAAI,CAACC,SAAL,CAAe;AAAEP,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,KAAK,EAALA,KAAR;AAAeC,gBAAAA,QAAQ,EAARA;AAAf,eAAf,CANsC;AAAA;AAAA;AAAA,qBAQ/BnB,KAAK,CAACyB,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,CAR+B;;AAAA;AAQ3CR,cAAAA,GAR2C;AAUjDJ,cAAAA,QAAQ,CAAC;AACPK,gBAAAA,IAAI,EAAEZ,gBADC;AAEPa,gBAAAA,OAAO,EAAEF,GAAG,CAACG,IAFN,CAEa;;AAFb,eAAD,CAAR;AAViD;AAAA;;AAAA;AAAA;AAAA;AAe3CW,cAAAA,MAf2C,GAelC,aAAMC,QAAN,CAAeZ,IAAf,CAAoBW,MAfc;;AAgBjD,kBAAIA,MAAJ,EAAY;AACVA,gBAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK;AAAA,yBAAIrB,QAAQ,CAACH,QAAQ,CAACwB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAZ;AAAA,iBAApB;AACD;;AACDtB,cAAAA,QAAQ,CAAC;AACPK,gBAAAA,IAAI,EAAEX;AADC,eAAD,CAAR;;AAnBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import axios from 'axios';\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\r\nimport { setAlert } from './alert';\r\nimport setAuthToken from './../reducers/utils/setAuthToken';\r\n\r\n// Load User \r\nexport const loadUser = () => async dispatch => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data   //this will be the user\r\n    })\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// Register User\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data   //this will be the token that we hit /api/users route\r\n    })\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}