{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\nimport { setAlert } from './alert'; // Register User\n\nexport var register = function register(_ref) {\n  var name = _ref.name,\n      email = _ref.email,\n      password = _ref.password;\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, body, res, errors;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              };\n              body = JSON.stringify({\n                name: name,\n                email: email,\n                password: password\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post('/api/users', body, config);\n\n            case 5:\n              res = _context.sent;\n              dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data //this will be the token that we get at /api/users\n\n              });\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              errors = _context.t0.response.data.errors;\n\n              if (errors) {\n                errors.forEach(function (error) {\n                  return dispatch(setAlert(error.msg, 'danger'));\n                });\n              }\n\n              dispatch({\n                type: REGISTER_FAIL\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","setAlert","register","name","email","password","dispatch","config","headers","body","JSON","stringify","post","res","type","payload","data","errors","response","forEach","error","msg"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,SAAhD;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,MAAQC,KAAR,QAAQA,KAAR;AAAA,MAAeC,QAAf,QAAeA,QAAf;AAAA;AAAA,yEAA6B,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7CC,cAAAA,MAD6C,GACpC;AACbC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AADI,eADoC;AAM7CC,cAAAA,IAN6C,GAMtCC,IAAI,CAACC,SAAL,CAAe;AAAER,gBAAAA,IAAI,EAAJA,IAAF;AAAQC,gBAAAA,KAAK,EAALA,KAAR;AAAeC,gBAAAA,QAAQ,EAARA;AAAf,eAAf,CANsC;AAAA;AAAA;AAAA,qBAQ/BP,KAAK,CAACc,IAAN,CAAW,YAAX,EAAyBH,IAAzB,EAA+BF,MAA/B,CAR+B;;AAAA;AAQ3CM,cAAAA,GAR2C;AAUjDP,cAAAA,QAAQ,CAAC;AACPQ,gBAAAA,IAAI,EAAEf,gBADC;AAEPgB,gBAAAA,OAAO,EAAEF,GAAG,CAACG,IAFN,CAEa;;AAFb,eAAD,CAAR;AAViD;AAAA;;AAAA;AAAA;AAAA;AAe3CC,cAAAA,MAf2C,GAelC,YAAMC,QAAN,CAAeF,IAAf,CAAoBC,MAfc;;AAgBjD,kBAAIA,MAAJ,EAAY;AACVA,gBAAAA,MAAM,CAACE,OAAP,CAAe,UAAAC,KAAK;AAAA,yBAAId,QAAQ,CAACL,QAAQ,CAACmB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAZ;AAAA,iBAApB;AACD;;AACDf,cAAAA,QAAQ,CAAC;AACPQ,gBAAAA,IAAI,EAAEd;AADC,eAAD,CAAR;;AAnBiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA7B;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import axios from 'axios';\r\nimport { REGISTER_SUCCESS, REGISTER_FAIL } from './types';\r\nimport { setAlert } from './alert';\r\n\r\n// Register User\r\nexport const register = ({name, email, password}) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  const body = JSON.stringify({ name, email, password });\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data   //this will be the token that we get at /api/users\r\n    })\r\n  } catch (error) {\r\n    const errors = error.response.data.errors;\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\r\n    }\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    })\r\n  }\r\n} \r\n"]},"metadata":{},"sourceType":"module"}