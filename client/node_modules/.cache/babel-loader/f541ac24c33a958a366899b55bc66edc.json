{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST } from '../actions/types';\nvar initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_POSTS:\n      return _objectSpread({}, state, {\n        posts: action.payload,\n        loading: false\n      });\n\n    case GET_POST:\n      return _objectSpread({}, state, {\n        post: action.payload,\n        loading: false\n      });\n\n    case ADD_POST:\n      return _objectSpread({}, state, {\n        posts: [action.payload].concat(_toConsumableArray(state.posts)),\n        loading: false\n      });\n\n    case DELETE_POST:\n      return _objectSpread({}, state, {\n        posts: state.posts.filter(function (post) {\n          return post._id !== action.payload;\n        }),\n        //this post is deleted\n        loading: false\n      });\n\n    case POST_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        loading: false\n      });\n\n    case UPDATE_LIKES:\n      return _objectSpread({}, state, {\n        posts: state.posts.map(function (post) {\n          return post._id === action.payload.id ? _objectSpread({}, post, {\n            likes: action.payload.likes\n          }) : post;\n        }),\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","initialState","posts","post","loading","error","state","action","type","payload","filter","_id","map","id","likes"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,EAA8CC,WAA9C,EAA2DC,QAA3D,EAAqEC,QAArE,QAAqF,kBAArF;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,YAAqC;AAAA,MAA5BC,KAA4B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAClD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKb,SAAL;AACE,+BACKW,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKJ,QAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACE,OAFf;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKL,QAAL;AACE,+BACKO,KADL;AAEEJ,QAAAA,KAAK,GAAGK,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACJ,KAA5B,EAFP;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKN,WAAL;AACE,+BACKQ,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAmB,UAAAP,IAAI;AAAA,iBAAIA,IAAI,CAACQ,GAAL,KAAaJ,MAAM,CAACE,OAAxB;AAAA,SAAvB,CAFT;AAEkE;AAChEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKR,UAAL;AACE,+BACKU,KADL;AAEED,QAAAA,KAAK,EAAEE,MAAM,CAACE,OAFhB;AAGEL,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKP,YAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,GAAZ,CAAgB,UAAAT,IAAI;AAAA,iBAAIA,IAAI,CAACQ,GAAL,KAAaJ,MAAM,CAACE,OAAP,CAAeI,EAA5B,qBAAsCV,IAAtC;AAA4CW,YAAAA,KAAK,EAChFP,MAAM,CAACE,OAAP,CAAeK;AADgB,eACPX,IADG;AAAA,SAApB,CAFT;AAIEC,QAAAA,OAAO,EAAE;AAJX;;AAMF;AACE,aAAOE,KAAP;AAvCJ;AAyCD","sourcesContent":["import { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST } from '../actions/types';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  post: null,\r\n  loading: true,\r\n  error: {}\r\n}\r\n\r\nexport default function(state=initialState, action) {\r\n  switch(action.type) {\r\n    case GET_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n        loading: false\r\n      }\r\n    case GET_POST: \r\n      return {\r\n        ...state,\r\n        post: action.payload,\r\n        loading: false\r\n      }\r\n    case ADD_POST: \r\n      return {\r\n        ...state,\r\n        posts: [action.payload, ...state.posts],\r\n        loading: false\r\n      }\r\n    case DELETE_POST:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(post => post._id !== action.payload), //this post is deleted\r\n        loading: false\r\n      }\r\n    case POST_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false\r\n      }\r\n    case UPDATE_LIKES:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post => post._id === action.payload.id ? { ...post, likes:\r\n        action.payload.likes} : post ),\r\n        loading: false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}