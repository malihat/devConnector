{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\post\\\\CommentItem.js\";\n\nimport React, { Fragment } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { addComment } from './../../actions/post';\nimport moment from 'moment';\nimport { deleteComment } from '../../actions/post';\n\nvar CommentForm = function CommentForm(_ref) {\n  var postId = _ref.postId,\n      deleteComment = _ref.deleteComment,\n      auth = _ref.auth,\n      _ref$comment = _ref.comment,\n      _id = _ref$comment._id,\n      text = _ref$comment.text,\n      name = _ref$comment.name,\n      avatar = _ref$comment.avatar,\n      user = _ref$comment.user,\n      date = _ref$comment.date;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \" \", name, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Posted on \", moment(date).format('MM/DD/YYYY')), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return deleteComment(postId, _id);\n    },\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }))));\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addComment: addComment,\n  deleteComment: deleteComment\n})(CommentForm);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/post/CommentItem.js"],"names":["React","Fragment","PropTypes","connect","Link","addComment","moment","deleteComment","CommentForm","postId","auth","comment","_id","text","name","avatar","user","date","format","loading","e","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {Link } from 'react-router-dom'\r\nimport { addComment } from './../../actions/post';\r\nimport moment from 'moment';\r\nimport {deleteComment} from '../../actions/post' \r\n\r\nconst CommentForm = ({ postId, deleteComment, auth,\r\n  comment: {_id, text, name, avatar, user, date } }) => {\r\n  return (  \r\n    <div class=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img\r\n            class=\"round-img\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h4> {name} </h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p class=\"my-1\">\r\n          {text}\r\n        </p>\r\n        <p class=\"post-date\">\r\n            Posted on { moment(date).format('MM/DD/YYYY') } \r\n        </p>\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button onClick={e => deleteComment(postId, _id)} type=\"button\" className=\"btn btn-danger\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n \r\nexport default connect(mapStateToProps, {addComment, deleteComment})(CommentForm);"]},"metadata":{},"sourceType":"module"}