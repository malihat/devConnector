{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\n\nimport React, { Fragment, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from './../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport profile from '../../reducers/profile';\n\nvar Dashboard = function Dashboard(props) {\n  useEffect(function () {\n    props.getCurrentProfile();\n  }, []);\n  return props.profile.loading && props.profile.profile === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 20\n    }\n  }, \"Dashboard \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), \" Welcome \", props.auth.user && props.auth.user.name, \" \"), props.profile.profile !== null ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(DashboardActions, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(Experience, {\n    experience: props.profile.profile.experience,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 34\n    }\n  }), \"  \") : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \" You have not yet setup a profile, please add some info\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \" Create Profile \")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile: getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","PropTypes","Link","connect","getCurrentProfile","Spinner","DashboardActions","Experience","profile","Dashboard","props","loading","auth","user","name","experience","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACzBV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,KAAK,CAACN,iBAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOM,KAAK,CAACF,OAAN,CAAcG,OAAd,IAAyBD,KAAK,CAACF,OAAN,CAAcA,OAAd,KAA0B,IAAnD,gBACD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAED,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAW;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,oBACkB;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,eACyBE,KAAK,CAACE,IAAN,CAAWC,IAAX,IAAmBH,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBC,IAD5D,MADlB,EAGGJ,KAAK,CAACF,OAAN,CAAcA,OAAd,KAA0B,IAA1B,gBAAiC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgC,oBACX,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAEE,KAAK,CAACF,OAAN,CAAcA,OAAd,CAAsBO,UAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,OAAjC,gBAED,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DADF,eAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,iBAAT;AAA2B,IAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CALF,CAFN;AAYD,CAjBD;;AAmBAN,SAAS,CAACO,SAAV,GAAsB;AACpBZ,EAAAA,iBAAiB,EAAEH,SAAS,CAACgB,IAAV,CAAeC,UADd;AAEpBN,EAAAA,IAAI,EAAEX,SAAS,CAACkB,MAAV,CAAiBD,UAFH;AAGpBV,EAAAA,OAAO,EAAEP,SAAS,CAACkB,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,IAAI,EAAES,KAAK,CAACT,IADoB;AAEhCJ,IAAAA,OAAO,EAAEa,KAAK,CAACb;AAFiB,GAAL;AAAA,CAA7B;;AAKA,eAAeL,OAAO,CAACiB,eAAD,EAAmB;AAAChB,EAAAA,iBAAiB,EAAjBA;AAAD,CAAnB,CAAP,CAA+CK,SAA/C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { getCurrentProfile } from './../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport profile from '../../reducers/profile';\r\n\r\nconst Dashboard = props => {\r\n  useEffect(() => {\r\n    props.getCurrentProfile();\r\n  }, []);\r\n\r\n  return props.profile.loading && props.profile.profile === null ? \r\n        <Spinner /> : \r\n        <Fragment> <h1 className=\"large text-primary\">\r\n          Dashboard </h1> <p className=\"lead\"> \r\n          <i className=\"fas fa-user\"></i> Welcome {props.auth.user && props.auth.user.name } </p>\r\n          {props.profile.profile !== null ? <Fragment> \r\n            <DashboardActions /> <Experience experience={props.profile.profile.experience} />  </Fragment> : \r\n          <Fragment> \r\n            <p> You have not yet setup a profile, please add some info</p>\r\n            <Link to='/create-profile' className=\"btn btn-primary my-1\"> Create Profile </Link>\r\n          </Fragment> } \r\n       </Fragment>\r\n}\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n}\r\n \r\nconst mapStateToProps = state => ({  \r\n  auth: state.auth,\r\n  profile: state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,  {getCurrentProfile})(Dashboard);\r\n "]},"metadata":{},"sourceType":"module"}