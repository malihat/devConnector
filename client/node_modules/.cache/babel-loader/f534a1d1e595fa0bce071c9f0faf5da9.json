{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\n\nimport React, { Fragment } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike } from '../../actions/post';\n\nvar PostItem = function PostItem(_ref) {\n  var auth = _ref.auth,\n      addLike = _ref.addLike,\n      removeLike = _ref.removeLike,\n      _ref$post = _ref.post,\n      _id = _ref$post._id,\n      text = _ref$post.text,\n      name = _ref$post.name,\n      avatar = _ref$post.avatar,\n      user = _ref$post.user,\n      likes = _ref$post.likes,\n      comments = _ref$post.comments,\n      date = _ref$post.date;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"profile.html\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, name, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Posted on \", moment(date).format('MM/DD/YYYY')), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return addLike(_id);\n    },\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-thumbs-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), \" \", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \" \", likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    class: \"comment-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, likes.length, \" \"), \" \")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return addLike(_id);\n    },\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-thumbs-down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/post/\".concat(_id),\n    class: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Discussion\", ' ', \" \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    class: \"comment-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, comments.length, \" \")), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }))));\n};\n\nPostItem.protoTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addLike: addLike,\n  removeLike: removeLike\n})(PostItem);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","moment","connect","addLike","removeLike","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","format","e","length","loading","protoTypes","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike } from '../../actions/post';\r\n\r\n\r\nconst PostItem = ({auth, addLike, removeLike, \r\n    post: {_id, text, name, avatar, user, likes, comments, date }}) => {\r\n  return (  \r\n    <div class=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <a href=\"profile.html\">\r\n          <img\r\n            class=\"round-img\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h4>{name} </h4>\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <p class=\"my-1\">\r\n          {text}\r\n        </p>\r\n        <p class=\"post-date\">\r\n            Posted on {moment(date).format('MM/DD/YYYY')}\r\n        </p>\r\n        <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n          <i class=\"fas fa-thumbs-up\"></i> {' '}\r\n          <span> {likes.length > 0 && (\r\n            <span class='comment-count'>{likes.length} </span>\r\n          )} </span>\r\n        </button>\r\n        <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n          <i class=\"fas fa-thumbs-down\"></i>\r\n        </button>\r\n        <Link to={`/post/${_id}`} class=\"btn btn-primary\">\r\n          Discussion{' '} {comments.length > 0 && (\r\n            <span class='comment-count'>{comments.length} </span>\r\n          )}\r\n        </Link>\r\n                        {/* post user === loggedin user */}\r\n        {!auth.loading && user === auth.user._id && (\r\n          <button type=\"button\" class=\"btn btn-danger\">\r\n            <i class=\"fas fa-times\"></i>\r\n          </button>\r\n        )}\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPostItem.protoTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {addLike, removeLike})(PostItem);"]},"metadata":{},"sourceType":"module"}