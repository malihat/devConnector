{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\profile\\\\ProfileGithub.js\";\n\nimport React, { Fragment, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nvar ProfileGithub = function ProfileGithub(_ref) {\n  var username = _ref.username,\n      getGithubRepos = _ref.getGithubRepos,\n      repos = _ref.repos;\n  useEffect(function () {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-github\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \" Github Repos \"), repos === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }) : repos.map(function (repo) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: repo._id,\n      className: \"repo bg-white p-1 my-1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, repo.name)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, \" \", repo.description, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"badge badge-primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Stars: \", repo.stargazers_count), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"badge badge-dark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Watchers: \", repo.watchers_count), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"badge badge-light\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Forks: \", repo.forks_count))));\n  }));\n};\n\nProfileGithub.protoTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    repos: state.profile.repos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getGithubRepos: getGithubRepos\n})(ProfileGithub);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/profile/ProfileGithub.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","map","repo","_id","html_url","name","description","stargazers_count","watchers_count","forks_count","protoTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAyC;AAAA,MAAtCC,QAAsC,QAAtCA,QAAsC;AAAA,MAA5BF,cAA4B,QAA5BA,cAA4B;AAAA,MAAZG,KAAY,QAAZA,KAAY;AAC7DP,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACD,GAFQ,EAEN,CAACF,cAAc,CAACE,QAAD,CAAf,CAFM,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGC,KAAK,KAAK,IAAV,gBAAiB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB,GACCA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,wBACZ;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,MAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAED,IAAI,CAACE,QAAd;AAAwB,MAAA,MAAM,EAAC,QAA/B;AAAwC,MAAA,GAAG,EAAC,qBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,IADR,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKH,IAAI,CAACI,WAAV,MAPF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACUJ,IAAI,CAACK,gBADf,CADF,eAIE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACaL,IAAI,CAACM,cADlB,CAJF,eAOE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACUN,IAAI,CAACO,WADf,CAPF,CADF,CAVF,CADY;AAAA,GAAd,CAHJ,CADF;AAiCD,CArCD;;AAwCAX,aAAa,CAACY,UAAd,GAA2B;AACzBb,EAAAA,cAAc,EAAEH,SAAS,CAACiB,IAAV,CAAeC,UADN;AAEzBZ,EAAAA,KAAK,EAAEN,SAAS,CAACmB,KAAV,CAAgBD,UAFE;AAGzBb,EAAAA,QAAQ,EAAEL,SAAS,CAACoB,MAAV,CAAiBF;AAHF,CAA3B;;AAOA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChChB,IAAAA,KAAK,EAAEgB,KAAK,CAACC,OAAN,CAAcjB;AADW,GAAL;AAAA,CAA7B;;AAIA,eAAeL,OAAO,CAACoB,eAAD,EAAkB;AAAClB,EAAAA,cAAc,EAAdA;AAAD,CAAlB,CAAP,CAA2CC,aAA3C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username)\r\n  }, [getGithubRepos(username)])\r\n  return (  \r\n    <div className=\"profile-github\">\r\n      <h2 className=\"text-primary my-1\"> Github Repos </h2>\r\n      {repos === null ? <Spinner /> : (\r\n        repos.map(repo => (\r\n          <div key={repo._id} className=\"repo bg-white p-1 my-1\">\r\n            <div> \r\n              <h4> \r\n                <a href={repo.html_url} target=\"_blank\" rel='noopener noreferrer'>\r\n                  {repo.name}\r\n\r\n                </a>\r\n              </h4>\r\n              <p> {repo.description} </p>\r\n            </div>\r\n            <div>\r\n              <ul> \r\n                <li className=\"badge badge-primary\">\r\n                  Stars: {repo.stargazers_count}\r\n                </li>\r\n                <li className=\"badge badge-dark\">\r\n                  Watchers: {repo.watchers_count}\r\n                </li>\r\n                <li className=\"badge badge-light\">\r\n                  Forks: {repo.forks_count}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>  \r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n \r\nProfileGithub.protoTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps, {getGithubRepos})(ProfileGithub);"]},"metadata":{},"sourceType":"module"}