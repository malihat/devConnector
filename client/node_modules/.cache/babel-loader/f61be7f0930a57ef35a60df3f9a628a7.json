{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\post\\\\Post.js\";\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getPost } from '../../actions/post';\nimport PostItem from './../posts/PostItem';\n\nvar Post = function Post(_ref) {\n  var getPost = _ref.getPost,\n      _ref$post = _ref.post,\n      post = _ref$post.post,\n      loading = _ref$post.loading,\n      match = _ref.match;\n  //match is used to get the id from url\n  useEffect(function () {\n    getPost(match.params.id);\n  }, []); // return <div> Post </div>\n\n  return loading || post === null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 51\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/post\",\n    className: \"btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \" Back to Posts \"), /*#__PURE__*/React.createElement(PostItem, {\n    post: post,\n    showActions: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }));\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getPost: getPost\n})(Post);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/post/Post.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","getPost","PostItem","Post","post","loading","match","params","id","propTypes","func","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA6C;AAAA,MAA3CF,OAA2C,QAA3CA,OAA2C;AAAA,uBAAlCG,IAAkC;AAAA,MAA3BA,IAA2B,aAA3BA,IAA2B;AAAA,MAArBC,OAAqB,aAArBA,OAAqB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAAG;AAC3DV,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO,CAACK,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT,CADwD,CAKxD;;AAEA,SAAOH,OAAO,IAAID,IAAI,KAAK,IAApB,gBAA2B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3B,gBAAyC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC9C,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAD8C,eAE9C,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF8C,CAAhD;AAID,CAXD;;AAaAD,IAAI,CAACM,SAAL,GAAiB;AACfR,EAAAA,OAAO,EAAEH,SAAS,CAACY,IAAV,CAAeC;AADT,CAAjB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAACX,EAAAA,OAAO,EAAPA;AAAD,CAAlB,CAAP,CAAoCE,IAApC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport { PropTypes } from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getPost} from '../../actions/post';\r\nimport PostItem from './../posts/PostItem';\r\n\r\n\r\nconst Post = ({getPost, post: {post, loading}, match}) => {  //match is used to get the id from url\r\n  useEffect(() => {\r\n    getPost(match.params.id)\r\n  }, [])\r\n\r\n  // return <div> Post </div>\r\n\r\n  return loading || post === null ? <Spinner /> : <Fragment>\r\n    <Link to='/post' className='btn'> Back to Posts </Link>\r\n    <PostItem post={post} showActions={false} />\r\n  </Fragment>\r\n}\r\n\r\nPost.propTypes = {\r\n  getPost: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  post: state.post\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPost})(Post);"]},"metadata":{},"sourceType":"module"}