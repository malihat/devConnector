{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nimport { setAlert } from './alert'; // Get posts\n\nexport var getPosts = function getPosts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('/api/post');\n\n            case 3:\n              res = _context.sent;\n              dispatch({\n                type: GET_POSTS,\n                payload: res.data\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context.t0.response.statusText,\n                  status: _context.t0.response.status\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}; // Remove Like\n\nexport var removeLike = function removeLike(postid) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.put(\"/api/post/unlike/\".concat(postid));\n\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: UPDATE_LIKES,\n                payload: {\n                  postid: postid,\n                  likes: res.data\n                }\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context2.t0.response.statusText,\n                  status: _context2.t0.response.status\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n}; // Add Like\n\nexport var addLike = function addLike(postid) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.put(\"/api/post/like/\".concat(postid));\n\n            case 3:\n              res = _context3.sent;\n              dispatch({\n                type: UPDATE_LIKES,\n                payload: {\n                  postid: postid,\n                  likes: res.data\n                }\n              });\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context3.t0.response.statusText,\n                  status: _context3.t0.response.status\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n}; // Delete Post \n\nexport var deletePost = function deletePost(id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return axios.delete(\"/api/post/\".concat(id));\n\n            case 3:\n              dispatch({\n                type: DELETE_POST,\n                payload: id\n              });\n              dispatch(setAlert('Post Removed', 'success'));\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context4.t0.response.statusText,\n                  status: _context4.t0.response.status\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n}; // Add Post \n\nexport var addPost = function addPost(formData) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      var config, res;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              config = {\n                headers: {\n                  'Content-Type': 'application/type'\n                }\n              };\n              _context5.prev = 1;\n              _context5.next = 4;\n              return axios.post('/api/post', formData, config);\n\n            case 4:\n              res = _context5.sent;\n              dispatch({\n                type: ADD_POST,\n                payload: res.data\n              });\n              dispatch(setAlert('Post Created', 'success'));\n              _context5.next = 12;\n              break;\n\n            case 9:\n              _context5.prev = 9;\n              _context5.t0 = _context5[\"catch\"](1);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context5.t0.response.statusText,\n                  status: _context5.t0.response.status\n                }\n              });\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[1, 9]]);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n}; // Get post\n\nexport var getPost = function getPost(id) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return axios.get(\"/api/post/\".concat(id));\n\n            case 3:\n              res = _context6.sent;\n              dispatch({\n                type: GET_POST,\n                payload: res.data\n              });\n              _context6.next = 10;\n              break;\n\n            case 7:\n              _context6.prev = 7;\n              _context6.t0 = _context6[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context6.t0.response.statusText,\n                  status: _context6.t0.response.status\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 7]]);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n}; // Add Comment\n\nexport var addComment = function addComment(postId, formData) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      var config, res;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              config = {\n                headers: {\n                  'Content-Type': 'application/type'\n                }\n              };\n              _context7.prev = 1;\n              _context7.next = 4;\n              return axios.post(\"/api/post/comment/\".concat(postId), formData, config);\n\n            case 4:\n              res = _context7.sent;\n              dispatch({\n                type: ADD_COMMENT,\n                payload: res.data\n              });\n              dispatch(setAlert('Comment Added', 'success'));\n              _context7.next = 12;\n              break;\n\n            case 9:\n              _context7.prev = 9;\n              _context7.t0 = _context7[\"catch\"](1);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context7.t0.response.statusText,\n                  status: _context7.t0.response.status\n                }\n              });\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[1, 9]]);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n}; // Delete Comment \n\nexport var deleteComment = function deleteComment(postId) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return axios.delete(\"/api/post/comment/\".concat(postId));\n\n            case 3:\n              dispatch({\n                type: REMOVE_COMMENT\n              });\n              dispatch(setAlert('Comment Deleted', 'success'));\n              _context8.next = 10;\n              break;\n\n            case 7:\n              _context8.prev = 7;\n              _context8.t0 = _context8[\"catch\"](0);\n              dispatch({\n                type: POST_ERROR,\n                payload: {\n                  msg: _context8.t0.response.statusText,\n                  status: _context8.t0.response.status\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[0, 7]]);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/actions/post.js"],"names":["axios","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","GET_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","getPosts","dispatch","get","res","type","payload","data","msg","response","statusText","status","removeLike","postid","put","likes","addLike","deletePost","id","delete","addPost","formData","config","headers","post","getPost","addComment","postId","deleteComment"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { GET_POSTS, POST_ERROR, UPDATE_LIKES, \r\n          DELETE_POST, ADD_POST, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\r\nimport { setAlert } from './alert';\r\n\r\n// Get posts\r\nexport const getPosts = () => async dispatch => {\r\n  try {\r\n    const res = await axios.get('/api/post'); \r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: res.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Remove Like\r\nexport const removeLike = postid => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/post/unlike/${postid}`); \r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postid, likes: res.data }\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Add Like\r\nexport const addLike = postid => async dispatch => {\r\n  try {\r\n    const res = await axios.put(`/api/post/like/${postid}`); \r\n    dispatch({\r\n      type: UPDATE_LIKES,\r\n      payload: { postid, likes: res.data }\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Delete Post \r\nexport const deletePost = id => async dispatch => {\r\n  try {\r\n    await axios.delete(`/api/post/${id}`); \r\n    dispatch({\r\n      type: DELETE_POST,\r\n      payload: id\r\n    })\r\n    dispatch(setAlert('Post Removed', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Add Post \r\nexport const addPost = formData => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/type'\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post('/api/post', formData, config); \r\n    dispatch({\r\n      type: ADD_POST,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Post Created', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Get post\r\nexport const getPost = id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/post/${id}`); \r\n    dispatch({\r\n      type: GET_POST,\r\n      payload: res.data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Add Comment\r\nexport const addComment = (postId, formData) => async dispatch => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/type'\r\n    }\r\n  }\r\n\r\n  try {\r\n    const res = await axios.post(`/api/post/comment/${postId}`, formData, config); \r\n    dispatch({\r\n      type: ADD_COMMENT,\r\n      payload: res.data\r\n    })\r\n    dispatch(setAlert('Comment Added', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}\r\n\r\n// Delete Comment \r\nexport const deleteComment = (postId) => async dispatch => {\r\n\r\n  try {\r\n    await axios.delete(`/api/post/comment/${postId}`); \r\n    dispatch({\r\n      type: REMOVE_COMMENT,\r\n    })\r\n    dispatch(setAlert('Comment Deleted', 'success'));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: POST_ERROR,\r\n      payload: { msg: error.response.statusText, status: error.response.status}\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}