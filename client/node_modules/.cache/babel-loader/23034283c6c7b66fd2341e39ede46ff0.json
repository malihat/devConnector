{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\n\nimport React, { Fragment, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\n\nvar Profile = function Profile(props) {\n  useEffect(function () {\n    props.getProfileById(props.match.params.id);\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 6\n    }\n  }, props.profile.profile === null || props.profile.loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 67\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, \" Back to Profile \"), props.auth.isAuthenticated && props.auth.loading === false && props.auth.user._id === props.profile.profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }\n  }, \" Edit Profile \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-grid my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: props.profile.profile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: props.profile.profile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }, \" Experience \"), props.profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 57\n    }\n  }, props.profile.experience.map(function (experience) {\n    return /*#__PURE__*/React.createElement(ProfileExperience, {\n      key: experience._id,\n      experience: props.profile.profile.experience,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    });\n  }), \"  \") : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }\n  }, \" No experience credentials \")))));\n};\n\nProfile.protoTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfileById: getProfileById\n})(Profile);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","Profile","props","match","params","id","profile","loading","auth","isAuthenticated","user","_id","experience","length","map","protoTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvBV,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,KAAK,CAACL,cAAN,CAAqBK,KAAK,CAACC,KAAN,CAAYC,MAAZ,CAAmBC,EAAxC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,OAAN,CAAcA,OAAd,KAA0B,IAA1B,IAAkCJ,KAAK,CAACI,OAAN,CAAcC,OAAhD,gBAA0D,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1D,gBACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEIL,KAAK,CAACM,IAAN,CAAWC,eAAX,IAA8BP,KAAK,CAACM,IAAN,CAAWD,OAAX,KAAuB,KAArD,IACAL,KAAK,CAACM,IAAN,CAAWE,IAAX,CAAgBC,GAAhB,KAAwBT,KAAK,CAACI,OAAN,CAAcA,OAAd,CAAsBI,IAAtB,CAA2BC,GADnD,iBAEC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJL,eAME;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAET,KAAK,CAACI,OAAN,CAAcA,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,CAAcA,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEKJ,KAAK,CAACI,OAAN,CAAcM,UAAd,CAAyBC,MAAzB,GAAkC,CAAlC,gBAAuC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACrCX,KAAK,CAACI,OAAN,CAAcM,UAAd,CAAyBE,GAAzB,CAA6B,UAAAF,UAAU;AAAA,wBACtC,oBAAC,iBAAD;AAAmB,MAAA,GAAG,EAAEA,UAAU,CAACD,GAAnC;AAAwC,MAAA,UAAU,EAAET,KAAK,CAACI,OAAN,CAAcA,OAAd,CAAsBM,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADsC;AAAA,GAAvC,CADqC,OAAvC,gBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCANP,CAHF,CANF,CAFH,CADH;AAyBD,CA9BD;;AAgCAX,OAAO,CAACc,UAAR,GAAqB;AACnBlB,EAAAA,cAAc,EAAEJ,SAAS,CAACuB,IAAV,CAAeC,UADZ;AAEnBX,EAAAA,OAAO,EAAEb,SAAS,CAACyB,MAAV,CAAiBD,UAFP;AAGnBT,EAAAA,IAAI,EAAEf,SAAS,CAACyB,MAAV,CAAiBD;AAHJ,CAArB;;AAOA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCd,IAAAA,OAAO,EAAEc,KAAK,CAACd,OADiB;AAEhCE,IAAAA,IAAI,EAAEY,KAAK,CAACZ;AAFoB,GAAL;AAAA,CAA7B;;AAKA,eAAed,OAAO,CAACyB,eAAD,EAAkB;AAACtB,EAAAA,cAAc,EAAdA;AAAD,CAAlB,CAAP,CAA2CI,OAA3C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getProfileById } from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\n\r\nconst Profile = props => {\r\n  useEffect(() => {\r\n    props.getProfileById(props.match.params.id)\r\n  }, []);\r\n  \r\n  return (  \r\n     <Fragment>\r\n      { props.profile.profile === null || props.profile.loading ? <Spinner/> :\r\n        <Fragment> \r\n          <Link to=\"/profiles\" className=\"btn btn-light\"> Back to Profile </Link>\r\n          { props.auth.isAuthenticated && props.auth.loading === false && \r\n            props.auth.user._id === props.profile.profile.user._id &&  \r\n            (<Link to=\"/edit-profile\" className=\"btn btn-dark\"> Edit Profile </Link> \r\n          )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={props.profile.profile} />\r\n            <ProfileAbout profile={props.profile.profile}  />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\"> Experience </h2>\r\n                {props.profile.experience.length > 0 ? (<Fragment> \r\n                  {props.profile.experience.map(experience => (\r\n                    <ProfileExperience key={experience._id} experience={props.profile.profile.experience} />\r\n                  ))}  </Fragment>) : \r\n                  (<h4> No experience credentials </h4> ) }\r\n            </div> \r\n          </div>\r\n        </Fragment> \r\n      }\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nProfile.protoTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n})\r\n \r\nexport default connect(mapStateToProps, {getProfileById})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}