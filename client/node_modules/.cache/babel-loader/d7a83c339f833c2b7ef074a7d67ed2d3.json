{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Maliha\\\\Desktop\\\\Udemy Courses\\\\Brad Traversy\\\\DevConnector\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\n\nimport React, { Fragment } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nvar PostItem = function PostItem(_ref) {\n  var auth = _ref.auth,\n      addLike = _ref.addLike,\n      removeLike = _ref.removeLike,\n      deletePost = _ref.deletePost,\n      _ref$post = _ref.post,\n      _id = _ref$post._id,\n      text = _ref$post.text,\n      name = _ref$post.name,\n      avatar = _ref$post.avatar,\n      user = _ref$post.user,\n      likes = _ref$post.likes,\n      comments = _ref$post.comments,\n      date = _ref$post.date,\n      showActions = _ref.showActions;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"post bg-white p-1 my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profile/\".concat(user),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    class: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, name, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    class: \"my-1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"post-date\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Posted on \", moment(date).format('MM/DD/YYYY')), /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return addLike(_id);\n    },\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-thumbs-up\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }), \" \", ' ', /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \" \", likes.length > 0 ? 'nice' : null, \" \")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return removeLike(_id);\n    },\n    type: \"button\",\n    class: \"btn btn-light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-thumbs-down\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: \"/posts/\".concat(_id),\n    class: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Discussion\", ' ', \" \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    class: \"comment-count\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, comments.length, \" \")), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return deletePost(_id);\n    },\n    type: \"button\",\n    class: \"btn btn-danger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-times\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.protoTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addLike: addLike,\n  removeLike: removeLike,\n  deletePost: deletePost\n})(PostItem);","map":{"version":3,"sources":["C:/Users/Maliha/Desktop/Udemy Courses/Brad Traversy/DevConnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","showActions","format","e","length","loading","defaultProps","protoTypes","object","isRequired","func","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\n\r\n\r\nconst PostItem = ({auth, addLike, removeLike, deletePost,\r\n    post: {_id, text, name, avatar, user, likes, comments, date }, showActions}) => {\r\n  return (  \r\n    <div class=\"post bg-white p-1 my-1\">\r\n      <div>\r\n        <Link to={`/profile/${user}`}>\r\n          <img\r\n            class=\"round-img\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h4>{name} </h4>\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <p class=\"my-1\">\r\n          {text}\r\n        </p>\r\n        <p class=\"post-date\">\r\n            Posted on {moment(date).format('MM/DD/YYYY')}\r\n        </p>\r\n\r\n        {/* {showActions && ( */}\r\n          <Fragment> \r\n            <button onClick={e => addLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n              <i class=\"fas fa-thumbs-up\"></i> {' '}\r\n              {/* <span> {likes.length} </span> */}\r\n              <span> {likes.length > 0 ? 'nice' : null } </span>\r\n            </button>\r\n            <button onClick={e => removeLike(_id)} type=\"button\" class=\"btn btn-light\">\r\n              <i class=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/posts/${_id}`} class=\"btn btn-primary\">\r\n              Discussion{' '} {comments.length > 0 && (\r\n                <span class='comment-count'>{comments.length} </span>\r\n              )}\r\n            </Link>\r\n                            {/* post user === loggedin user */}\r\n            {!auth.loading && user === auth.user._id && (\r\n              <button onClick={e => deletePost(_id)} type=\"button\" class=\"btn btn-danger\">\r\n                <i class=\"fas fa-times\"></i>\r\n              </button>\r\n            )}\r\n          </Fragment> \r\n        {/* )} */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n}\r\n\r\nPostItem.protoTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired\r\n}\r\n \r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})(PostItem);"]},"metadata":{},"sourceType":"module"}